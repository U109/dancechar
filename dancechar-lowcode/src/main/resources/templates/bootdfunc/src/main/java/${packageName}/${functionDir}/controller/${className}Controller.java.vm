package ${packageName}.${functionDir}.controller;

import ${packageName}.${functionDir}.dto.${genFileRenameDTO.dtoName}DTO;
import ${packageName}.${functionDir}.dto.${genFileRenameDTO.queryReqDTOName}QueryReqDTO;
import ${packageName}.${functionDir}.service.${genFileRenameDTO.serviceName}Service;
import com.sf.cemp.framework.common.plus.page.PageResp;
import com.sf.framework.domain.Result;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import javax.annotation.Resource;

/**
 * 类描述：${genFunctions}Controller
 *
 * @author ${authorName}
 * @date ${createDateString}
 */
@RequestMapping("${instanceName}")
@Api(value = "${instanceName}", tags = "${genFunctions}")
@RestController
public class ${className}Controller {
    @Resource
    private ${genFileRenameDTO.serviceName}Service ${instanceName}Service;

    /**
     * 功能描述: 分页查询列表
     */
    @PostMapping("pageList")
    @ApiOperation(value = "分页查询列表", notes = "分页查询列表")
    public Result<PageResp<${genFileRenameDTO.dtoName}DTO>> listPage(@RequestBody ${genFileRenameDTO.queryReqDTOName}QueryReqDTO req) {
        return ${instanceName}Service.listPage(req);
    }

    /**
     * 功能描述: 新增保存
     */
    @PostMapping("save")
    @ApiOperation(value = "新增保存", notes = "新增保存")
    public Result<Boolean> save(@RequestBody ${genFileRenameDTO.dtoName}DTO ${instanceName}DTO) {
        return ${instanceName}Service.save(${instanceName}DTO);
    }

    /**
     * 功能描述: 修改记录
     */
    @PostMapping("update")
    @ApiOperation(value = "修改记录", notes = "修改记录")
    public Result<Boolean> update(@RequestBody ${genFileRenameDTO.dtoName}DTO ${instanceName}DTO) {
        return ${instanceName}Service.update(${instanceName}DTO);
    }

    /**
     * 功能描述: 根据id删除记录
     */
    @PostMapping("deleteById")
    @ApiOperation(value = "根据id删除记录", notes = "根据id删除记录")
    public Result<Boolean> deleteById(@RequestBody ${genFileRenameDTO.dtoName}DTO ${instanceName}DTO) {
        return ${instanceName}Service.deleteById(${instanceName}DTO);
    }

    /**
     * 功能描述: 根据id获取记录
     */
    @PostMapping("getById")
    @ApiOperation(value = "根据id获取记录", notes = "根据id获取记录")
    public Result<${genFileRenameDTO.dtoName}DTO> getWrapperById(@RequestBody ${genFileRenameDTO.dtoName}DTO ${instanceName}DTO) {
        return ${instanceName}Service.getWrapperById(${instanceName}DTO);
    }
}